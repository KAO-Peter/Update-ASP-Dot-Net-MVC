@model HRPortal.Mvc.Models.VacanciesViewModel
@Scripts.Render("~/bundles/validate")

@{
    ViewBag.Title = "Create FAQ";
}
<style>
    .form-horizontal .form-group {
    margin-right: -15px;
    margin-left: 130px;
}
     .col-sm-9:before {
             content: "：";
            display: inline-block;
            height: 50px;
            vertical-align: bottom;
                  }
       .col-sm-10:before {
             content: "：";
            display: inline-block;
            height: 27px;
            vertical-align: bottom;
                  }
</style>
@if (TempData["message"] != null)
{
    <script type="text/javascript">
        $(function () {
            var message = @Html.Raw(Json.Encode(TempData["message"]));
            showAlertMessage(message);
        });
    </script>
}

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@HRPortal.MultiLanguage.Resource.FAQCreateTitle</h4>
        </div>
    

        @using (Html.BeginForm("Create", "VacanciesManager", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Data.Createdby)

            <div class="modal-body">
                <div class="tab-content">
                    <div class="form-group">
                        <label class="col-md-22">@HRPortal.MultiLanguage.Resource.EmployeeNo</label>
                        <div class="col-sm-44">
                            <p class="form-control-static">@ViewBag.EmpID</p>
                        </div>
                    </div>
                  
                    <div class="form-group">
                        <label class="col-md-22">@HRPortal.MultiLanguage.Resource.EmployeeName</label>
                        <div class="col-sm-44">
                            <p class="form-control-static">@ViewBag.EmpName</p>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-22">@HRPortal.MultiLanguage.Resource.DepartmentName</label>
                        <div class="col-sm-44">
                            <p class="form-control-static" data-bind="text: department_value">@ViewBag.DeptName</p>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Data.Title, new { @class = "col-md-22" })
                        <div class="col-sm-10" style="width:75%">
                            @Html.TextBoxFor(model => model.Data.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Data.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (Model.FAQTypeLists != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.Data.Type, htmlAttributes: new { @class = "col-md-22" })
                            <div class="col-sm-44" style="margin-top: 4px;">
                                @for (int i = 0; i < Model.FAQTypeLists.Count; i++)
                                {
                                    @Html.RadioButtonFor(a => a.Data.Type, Model.FAQTypeLists[i].Id, new { id = "Type_" + Model.FAQTypeLists[i].Id, onclick = "addNewType(false);", style = "width:10%"
                                    });
                                    @Html.Label("Type_" + Model.FAQTypeLists[i].Id, Model.FAQTypeLists[i].Name,new {style = "margin-right: 10px;" });
                                }
                                @Html.RadioButtonFor(a => a.Data.Type, Guid.Empty, new { id = "Type_Other", onclick = "addNewType(true);", style = "width:10%" })
                                @Html.Label("Type_Other", HRPortal.MultiLanguage.Resource.FAQInsertType)
                                @Html.TextBoxFor(model => model.OtherType, new { @class = "form-control", id = "txtOtherType", style = (Model.Data.Type == Guid.Empty ? "margin-left: 18px;" : "display:none;") })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.Data.ContentText, new { @class = "col-md-22" })
                        <div class="col-sm-9">
                            @Html.TextAreaFor(model => model.Data.ContentText, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Data.ContentText, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" value="@HRPortal.MultiLanguage.Resource.BtnSave" class="btn btn-success" />
                <button type="button" class="btn btn-default" data-dismiss="modal">@HRPortal.MultiLanguage.Resource.BtnClose</button>
            </div>
        }
    </div>
</div>
@if (TempData["message"] != null)
{
    <script type="text/javascript">
        $(function () {
            var message = @Html.Raw(Json.Encode(TempData["message"]));
                   showAlertMessage(message);
               });
    </script>
}
<script type="text/javascript">
    function addNewType(IsShow) {
        if (IsShow)
        {
            $("#txtOtherType").show();
        }
        else
            $("#txtOtherType").hide();

    }
    $(function () {
        $('#datetimepicker1').datetimepicker({
            language: 'zh-TW',
            pick12HourFormat: true,
            format: 'yyyy/mm/dd hh:ii',
            autoclose: true,
            showMeridian: true
        });
        $('#datetimepicker2').datetimepicker({
            language: 'zh-TW',
            pick12HourFormat: true,
            format: 'yyyy/mm/dd hh:ii',
            autoclose: true,
            showMeridian: true
        });

    });
</script>

